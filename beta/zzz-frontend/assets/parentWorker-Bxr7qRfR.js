(function(){"use strict";const b=function*(e,t,a){for(let n=e;n<=t;n+=a)yield n};function B(e,t,a=1){return[...b(e,t,a)]}function p(e,t){return Object.fromEntries(e.map((a,n)=>[a,t(a,n)]))}const M=["1","2","3","4","5","6"],f=["hp","atk","def","hp_","atk_","def_","pen","crit_","crit_dmg_","anomProf"],u=["hp","atk","def","hp_","atk_","def_","crit_","crit_dmg_","anomProf",...["electric_dmg_","fire_dmg_","ice_dmg_","physical_dmg_","ether_dmg_"],"pen_","anomMas_","impact_","enerRegen_"],E={S:15,A:12,B:9};Array.from(new Set([...f,...u]));const R={hp:{B:39,A:79,S:112},atk:{B:7,A:15,S:19},def:{B:5,A:10,S:15},hp_:{B:.01,A:.02,S:.03},atk_:{B:.01,A:.02,S:.03},def_:{B:.016,A:.032,S:.048},pen:{B:3,A:6,S:9},crit_:{B:.008,A:.016,S:.024},crit_dmg_:{B:.016,A:.032,S:.048},anomProf:{B:3,A:6,S:9}};function K(e,t){return R[e][t]}const r={B:.1,A:.2,S:.3},k={atk_:r,hp_:r,def_:{B:.16,A:.32,S:.48},hp:{B:734,A:1468,S:2200},atk:{B:104,A:212,S:316},def:{B:60,A:124,S:184},anomProf:{B:32,A:60,S:92},crit_:{B:.08,A:.16,S:.24},crit_dmg_:{B:.16,A:.32,S:.48},pen_:{B:.08,A:.16,S:.24},electric_dmg_:r,fire_dmg_:r,ice_dmg_:r,physical_dmg_:r,ether_dmg_:r,anomMas_:r,enerRegen_:{B:.2,A:.4,S:.6},impact_:{B:.06,A:.12,S:.18}};function P(e,t,a){const n=k[t][e];return n?n*(.25+.75*a/E[e]):0}const T=["charLvl","enemyDef","enemyDefRed_","enemyRes_","enemyResRed_","enemyResIgn_","common_dmg_","dmg_","impact","anomMas","shield_","enerRegen"];Array.from(new Set([...u,...f,...T]));const C=["impact","anomMas","dmg_","shield_"];Array.from(new Set([...u,...f,...C])),{...p(["burn","shock","corruption","shatter","assault"],e=>`${e} DMG Bonus`)},Object.entries({electric:"Electric",fire:"Fire",ice:"Ice",physical:"Physical",ether:"Ether"}).forEach(([e,t])=>{});const S=5e4;function F(e){const{id:t,mainStatKey:a,level:n,rarity:l,setKey:A,substats:m}=e;return{id:t,stats:{[a]:P(l,a,n),...Object.fromEntries(m.map(({key:_,upgrades:d})=>[_,K(_,l)*d]))},setKey:A}}let h;onmessage=async e=>{try{await v(e)}catch(t){console.error(t),postMessage({resultType:"err",message:JSON.stringify(t)})}};async function v(e){const{data:t}=e,{command:a}=t;switch(a){case"start":await I(t);break;case"terminate":w();break}}async function I({baseStats:e,conditionals:t,discsBySlot:a,constraints:n,setFilter2:l,setFilter4:A,numWorkers:m,formulaKey:_}){const d=p(M,s=>a[s].map(F)),{largestSlot:H}=Object.entries(a).reduce(({largestSlot:s,largestSize:o},[y,c])=>c.length>o?{largestSlot:y,largestSize:c.length}:{largestSlot:s,largestSize:o},{largestSlot:"head",largestSize:-1}),L=B(0,m-1).map(s=>p(M,o=>o===H?d[o].filter((y,c)=>c%m===s):d[o]));h=B(1,m).map(()=>new Worker(new URL(""+new URL("childWorker-B-vnW3Ht.js",self.location.href).href,self.location.href),{type:"module"}));let i=[],D=0;postMessage({resultType:"progress",progress:{numBuildsKept:0,numBuildsComputed:0}}),await Promise.all(h.map((s,o)=>new Promise((y,c)=>{s.onmessage=({data:g})=>{switch(g.resultType){case"initialized":s.postMessage({command:"start"});break;case"results":D+=g.numBuildsComputed,i=i.concat(g.builds),i.length>S*4&&(i.sort((G,O)=>O.value-G.value),i=i.slice(0,S)),postMessage({resultType:"progress",progress:{numBuildsKept:Math.min(i.length,S),numBuildsComputed:D}});break;case"done":y();break;case"err":console.error(g),c();break}};const j={command:"init",baseStats:e,conditionals:t,discStatsBySlot:L[o],constraints:n,formulaKey:_,setFilter2:l,setFilter4:A};s.postMessage(j)}))),postMessage({resultType:"done",buildResults:i.sort((s,o)=>o.value-s.value).slice(0,10)})}function w(){h.forEach(e=>e.terminate()),postMessage({resultType:"terminated"})}})();
